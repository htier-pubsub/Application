cJSON *crypto_result = send_crypto_operation("random_hex", "", 16);
		printf("First crypto operation returned: %p\n", (void*)crypto_result);

		if (crypto_result) {
			printf("Parsing JSON response...\n");
			cJSON *success = cJSON_GetObjectItem(crypto_result, "success");
			printf("Success object: %p\n", (void*)success);
			
			if (success && cJSON_IsTrue(success)) {
				printf("Success is true, getting data...\n");
				cJSON *data = cJSON_GetObjectItem(crypto_result, "data");
				printf("Data object: %p\n", (void*)data);
				
				if (data) {
					printf("Getting result from data...\n");
					cJSON *result_item = cJSON_GetObjectItem(data, "result");
					printf("Result object: %p\n", (void*)result_item);
					
					if (result_item && cJSON_IsString(result_item)) {
						printf("Result string ptr: %p\n", (void*)result_item->valuestring);
						if (result_item->valuestring) {
							printf("✓ Generated hex: %s\n", result_item->valuestring);
						} else {
							printf("✗ Result string is NULL\n");
						}
					} else {
						printf("✗ Invalid hex result format\n");
					}
				} else {
					printf("✗ No data in hex response\n");
				}
			} else {
				printf("✗ Failed to generate hex\n");
			}
			
			printf("Deleting first crypto result...\n");
			cJSON_Delete(crypto_result);
			printf("First crypto result deleted.\n");
		} else {
			printf("✗ First crypto operation returned NULL\n");
		}

		printf("=== First crypto operation completed ===\n");